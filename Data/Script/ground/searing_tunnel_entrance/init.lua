--[[
    init.lua
    Created: 12/23/2023 13:26:42
    Description: Autogenerated script file for the map searing_tunnel_entrance.
]]--
-- Commonly included lua functions and data
require 'common'
require 'PartnerEssentials'
require 'ground.searing_tunnel_entrance.searing_tunnel_entrance_ch_5'

-- Package name
local searing_tunnel_entrance = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---searing_tunnel_entrance.Init(map)
--Engine callback function
function searing_tunnel_entrance.Init(map)
  DEBUG.EnableDbgCoro()
  print('=>> Init_searing_tunnel_entrance <<=')
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
  PartnerEssentials.InitializePartnerSpawn()

end

---searing_tunnel_entrance.Enter(map)
--Engine callback function
function searing_tunnel_entrance.Enter(map)

  searing_tunnel_entrance.PlotScripting()

end

---searing_tunnel_entrance.Exit(map)
--Engine callback function
function searing_tunnel_entrance.Exit(map)


end

---searing_tunnel_entrance.Update(map)
--Engine callback function
function searing_tunnel_entrance.Update(map)


end

---searing_tunnel_entrance.GameSave(map)
--Engine callback function
function searing_tunnel_entrance.GameSave(map)

	PartnerEssentials.SaveGamePartnerPosition(CH('Teammate1'))

end

---searing_tunnel_entrance.GameLoad(map)
--Engine callback function
function searing_tunnel_entrance.GameLoad(map)
	PartnerEssentials.LoadGamePartnerPosition(CH('Teammate1'))
	searing_tunnel_entrance.PlotScripting()
end

function searing_tunnel_entrance.PlotScripting()
  GAME:FadeIn(20)
end 


-------------------------------
-- Entities Callbacks
-------------------------------
function searing_tunnel_entrance.Teammate1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PartnerEssentials.GetPartnerDialogue(CH('Teammate1'))
 end

function searing_tunnel_entrance.Teammate2_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Growlithe_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Teammate3_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Zigzagoon_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Kangaskhan_Rock_Action(obj, activator)
	GeneralFunctions.Kangashkhan_Rock_Interact(obj, activator)
end

--Guild members
function searing_tunnel_entrance.Dungeon_Entrance_Touch(obj, activator)
	--This ground is only available during chapter 5.
	searing_tunnel_entrance_ch_5.Dungeon_Entrance_Touch(obj, activator)
end

--Guild members
function searing_tunnel_entrance.Tropius_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Tropius_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Noctowl_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Noctowl_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Breloom_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Breloom_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Girafarig_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Girafarig_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Growlithe_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Growlithe_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Zigzagoon_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Zigzagoon_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Snubbull_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Snubbull_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Audino_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Audino_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Cranidos_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Cranidos_Action(...,...)"), obj, activator))
end

function searing_tunnel_entrance.Mareep_Action(obj, activator)
 DEBUG.EnableDbgCoro() --Enable debugging this coroutine
 assert(pcall(load("searing_tunnel_entrance_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Mareep_Action(...,...)"), obj, activator))
end


return searing_tunnel_entrance

